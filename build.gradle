plugins {
    id 'java-library'
    id 'java'
    id 'maven-publish'
    id 'me.champeau.mrjar' version '0.1'
    id 'idea'
    id 'signing'
}

group "${projectGroup}"
version "${projectVersion}"

multiRelease {
    targetVersions 8, 21
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_1_8
    withSourcesJar()
    withJavadocJar()
}

allprojects {
    repositories {
        mavenCentral()
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = "${projectGroup}"
            artifactId = "${projectName}"
            version = "${projectVersion}"
            from components.java

            pom {
                name = 'Batch4j'
                description = 'Simple batch processing library for java'
                url = 'https://github.com/mawngo/batch4j'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'mawngo'
                        name = 'Nguyen Toan'
                        email = 'sitdownrightnow.dev@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git:github.com/mawngo/batch4j.git'
                    developerConnection = 'scm:git:ssh://github.com/mawngo/batch4j.git'
                    url = 'https://github.com/mawngo/batch4j'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = layout.buildDirectory.dir('repos/releases')
            def snapshotsRepoUrl = layout.buildDirectory.dir('repos/snapshots')
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

dependencies {
    implementation 'org.slf4j:slf4j-api:2.0.12'
}

jar {
    archiveClassifier = ''
    enabled = true
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

signing {
    sign publishing.publications.mavenJava
}
